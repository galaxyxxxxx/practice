/**
 * 约瑟夫环问题
 * 描述：N个人围成一圈，第一个人从1开始报数，报M的将被杀掉，下一个人接着从1开始报。如此反复，最后剩下N-1个，求最后的胜利者。
 * 知识点：循环链表
 * 
 * ## 思路一
 * - 方法：链表模拟这个过程
 * - 缺点：时间复杂度O(nm)
 * 
 * ## 思路二
 * - 方法：递推公式 f(n,m) = (f(n-1,m) + 3) % n
 * f ( 1 , 3 )：只有1个人了，那个人就是获胜者，他的下标位置是0
 * f ( 2 , 3 ) = ( f ( 1 , 3 ) + 3 ) % 2 = 3 % 2 = 1 f(2,3)=(f(1,3)+3)\%2=3\%2=1f(2,3)=(f(1,3)+3)%2=3%2=1：在有2个人的时候，胜利者的下标位置为0,1
 * f ( 3 , 3 ) = ( f ( 2 , 3 ) + 3 ) % 3 = 4 % 3 = 1 f(3,3)=(f(2,3)+3)\%3=4\%3=1f(3,3)=(f(2,3)+3)%3=4%3=1：在有3个人的时候，胜利者的下标位置为0,1,2
 * f ( 4 , 3 ) = ( f ( 3 , 3 ) + 3 ) % 4 = 4 % 4 = 0 f(4,3)=(f(3,3)+3)\%4=4\%4=0f(4,3)=(f(3,3)+3)%4=4%4=0：在有4个人的时候，胜利者的下标位置为0
 */

const joseph = (n, m) => {
  let res = 0
  for (let i = 2; i < n; i++) {
    res = (res + m) % i
  }
  return res + 1
}

console.log(joseph(100,3))